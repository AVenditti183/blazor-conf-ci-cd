# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

jobs:
- job: Build
  displayName: Build
  pool:
    vmImage: ubuntu-latest
  
  steps:
  - task: GitVersion@5
    inputs:
      versionSpec: '5.x'

  - task: UseDotNet@2
    displayName: 'use .net core sdk'
    inputs:
      packageType: 'sdk'
      version: '6.0.x'
      includePreviewVersions: true
      
  - task: DotNetCoreCLI@2
    displayName: Build with dotnet
    inputs:
      command: 'build'

  - task: DotNetCoreCLI@2
    displayName: Test with dotnet
    inputs:
      command: 'test'
  
  - task: PowerShell@2
    name: AssignVersion
    inputs:
      targetType: 'inline'
      script: | 
        Write-Host "##vso[task.setvariable variable=version;isOutput=true]$(GitVersion.SemVer)"
        echo $(GitVersion.SemVer)

- job: Deploy
  displayName: Deploy
  dependsOn: [Build]
  pool:
    vmImage: ubuntu-latest
  variables:
      dockerGitVersion: $[ dependencies.Build.outputs['AssignVersion.version'] ]

  steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: echo $(dockerGitVersion)
      # echo $[ dependencies.Build.outputs['AssignVersion.version'] ];

  - task: Docker@2
    displayName: BuildAndPush
    inputs:
      command: buildAndPush
      repository: 'blazor-conf-2022-devops'
      containerRegistry: 'blazorconfregistry'
      tags: |
        $(dockerGitVersion)
        latest

  #- task: gitversion/setup@0
  #  displayName: Setup GitVersion
  #  inputs:
  #    versionSpec: '5.x'
    
  #- task: gitversion/execute@0
  #  displayName: Get Next Version Number
    
  #- task: gittagloader@1
  #  inputs:
  #    filter: 'Latest'
  #    lines: '1'
